generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String             @id @default(uuid())
  name                String             @db.VarChar(63)
  cpf                 String             @unique @db.VarChar(127)
  matricula           String?            @unique @db.VarChar(127)
  email               String             @unique @db.VarChar(127)
  telefone            String             @db.VarChar(127)
  curso               String?            @db.VarChar(127)
  password            String             @db.VarChar(127)
  role                String             @db.VarChar(127)
  createdAt           DateTime           @default(now()) @db.Timestamp(0)
  updatedAt           DateTime           @default(now()) @db.Timestamp(0)
  id_instituicao      String?
  termosDeCompromisso TermoCompromisso[] @relation("alunoTermo")
  processosDeEstagio  ProcessoEstagio [] @relation("alunoProcessoEstagio")
  files               File[]             @relation("userFile")
  instituicao         Instituicao?       @relation("userInstituicao", fields: [id_instituicao], references: [id], map: "tb_instituicao")

  @@map("tb_users")
}

model File{
  id                  String             @id @default(uuid())
  filePath            String             @db.VarChar(255)
  userId              String             @db.VarChar(255)
  user                User               @relation("userFile",fields: [userId], references: [id])
  @@map("tb_user_files")
}

model Token{
  id        String   @id @default(uuid())
  hash      String   @db.VarChar(255)
  user_email  String   @db.VarChar(255)
  @@map("tb_token")
}

model Instituicao {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(63)
  campus    String   @db.VarChar(127)
  cnpj      String   @db.VarChar(127)
  UF        String   @db.VarChar(127)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)
  users     User[]   @relation("userInstituicao")

  @@map("tb_instituicao")
}

model Concedente {
  id                  String             @id @default(uuid())
  name                String             @db.VarChar(63)
  endereco            String             @db.VarChar(127)
  cnpj                String             @db.VarChar(127)
  cep                 String             @db.VarChar(127)
  email               String             @db.VarChar(127)
  telefone            String             @db.VarChar(127)
  createdAt           DateTime           @default(now()) @db.Timestamp(0)
  updatedAt           DateTime           @default(now()) @db.Timestamp(0)
  termosDeCompromisso TermoCompromisso[] @relation("concedenteTermo")

  @@map("tb_concedentes")
}

model TermoCompromisso {
  id                String      @id @default(uuid())
  numApoliceSeguro  String      @db.VarChar(63)
  nomeSeguradora    String      @db.VarChar(127)
  profOrientador    String      @db.VarChar(127)
  codSiape          String      @db.VarChar(127)
  dataInicioEstagio DateTime    @db.Timestamp(0)
  dataFimEstagio    DateTime    @db.Timestamp(0)
  horaInicioEstagio DateTime    @db.Timestamp(0)
  horaFimEstagio    DateTime    @db.Timestamp(0)
  createdAt         DateTime    @default(now()) @db.Timestamp(0)
  updatedAt         DateTime    @default(now()) @db.Timestamp(0)
  //relacionamento aluno
  id_aluno          String?
  user              User?       @relation("alunoTermo", fields: [id_aluno], references: [id])

  //relaionamento concedente
  id_concedente     String?
  concedente        Concedente? @relation("concedenteTermo", fields: [id_concedente], references: [id])

  //relacionamento processo
  id_processoEstagio String    @unique
  processoEstagio   ProcessoEstagio @relation(fields: [id_processoEstagio], references: [id])

  @@map("tb_termo_compromisso")
}

model ProcessoEstagio {
  id                  String      @id @default(uuid())
  movimentacao        String      @db.VarChar(63)
  status              String      @db.VarChar(127)
  dataInicioProcesso  DateTime   @default(now()) @db.Timestamp(0)
  dataFimProcesso     DateTime   @db.Timestamp(0)

  //relacionamento termo de compromisso
  termoCompromisso TermoCompromisso?

  //relacionamento Aluno
  id_aluno            String
  user              User       @relation("alunoProcessoEstagio", fields: [id_aluno], references: [id])

  //relacionamento AvaliacaoAluno
  avaliacaoEstagio AvalicaoEstagio[] @relation("processoEstagioAvaliacao")
  
  @@map("tb_processo_estagio")
}

model AvalicaoEstagio{
  id                  String      @id @default(uuid())
  atividadesEstagio   String      @db.VarChar(63)
  componentesCurricularesUtilizados   String      @db.VarChar(127)
  aplicacaoDeConhecimentosCurso   String      @db.VarChar(127)
  dataInicioProcesso  DateTime   @default(now()) @db.Timestamp(0)
  dataFimProcesso     DateTime   @db.Timestamp(0)
  id_aluno            String
  id_processoEstagio  String

  processoEstagio        ProcessoEstagio @relation("processoEstagioAvaliacao", fields: [id_processoEstagio], references: [id])
}
