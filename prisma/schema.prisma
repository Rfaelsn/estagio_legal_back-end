generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String             @id @default(uuid())
  name                String             @db.VarChar(63)
  cpf                 String             @unique @db.VarChar(127)
  registration        String?            @unique @db.VarChar(127)
  email               String             @unique @db.VarChar(127)
  telefone            String             @db.VarChar(127)
  courseStudy         String?            @db.VarChar(127)
  password            String             @db.VarChar(127)
  role                String             @db.VarChar(127)
  createdAt           DateTime           @default(now()) @db.Timestamp(0)
  updatedAt           DateTime           @default(now()) @db.Timestamp(0)
  id_institution      String?
  TermsCommitment     TermCommitment[]     @relation("userTerm")
  internshipProcess   InternshipProcess [] @relation("alunoProcessoEstagio")
  files               File[]               @relation("userFile")
  institution         Institution?         @relation("userInstitution", fields: [id_institution], references: [id], map: "tb_institution")

  @@map("tb_users")
}

model File{
  id                  String             @id @default(uuid())
  filePath            String             @db.VarChar(255)
  userId              String             @db.VarChar(255)
  user                User               @relation("userFile",fields: [userId], references: [id])
  @@map("tb_user_files")
}

model Token{
  id        String   @id @default(uuid())
  hash      String   @db.VarChar(255)
  user_email  String   @db.VarChar(255)
  @@map("tb_token")
}

model Institution {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(63)
  campus    String   @db.VarChar(127)
  cnpj      String   @db.VarChar(127)
  UF        String   @db.VarChar(127)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)
  users     User[]   @relation("userInstitution")

  @@map("tb_institution")
}

model InternshipGrantor {
  id                  String             @id @default(uuid())
  name                String             @db.VarChar(63)
  endereco            String             @db.VarChar(127)
  cnpj                String             @db.VarChar(127)
  cep                 String             @db.VarChar(127)
  email               String             @db.VarChar(127)
  telefone            String             @db.VarChar(127)
  createdAt           DateTime           @default(now()) @db.Timestamp(0)
  updatedAt           DateTime           @default(now()) @db.Timestamp(0)
  termsCommitment TermCommitment[] @relation("internshipGrantorTerm")

  @@map("tb_internshipGrantor")
}

model TermCommitment {
  id                String      @id @default(uuid())
  numApoliceSeguro  String      @db.VarChar(63)
  nomeSeguradora    String      @db.VarChar(127)
  profOrientador    String      @db.VarChar(127)
  codSiape          String      @db.VarChar(127)
  dataInicioEstagio DateTime    @db.Timestamp(0)
  dataFimEstagio    DateTime    @db.Timestamp(0)
  horaInicioEstagio DateTime    @db.Timestamp(0)
  horaFimEstagio    DateTime    @db.Timestamp(0)
  //relacionamento aluno
  id_aluno          String
  user              User       @relation("userTerm", fields: [id_aluno], references: [id])

  //relaionamento concedente
  id_internshipGrantor     String
  internshipGrantor        InternshipGrantor @relation("internshipGrantorTerm", fields: [id_internshipGrantor], references: [id])

  //relacionamento processo
  id_processoEstagio String?    @unique
  internshipProcess   InternshipProcess? @relation(fields: [id_processoEstagio], references: [id])

  @@map("tb_termCommitment")
}

model InternshipProcess {
  id                  String      @id @default(uuid())
  movement            String      @db.VarChar(63)
  status              String      @db.VarChar(127)
  startDateProcess    DateTime   @default(now()) @db.Timestamp(0)
  endDateProcess      DateTime   @db.Timestamp(0)

  //relacionamento termo de compromisso
  termCommitment TermCommitment?

  //relacionamento Aluno
  id_user           String    
  user              User       @relation("alunoProcessoEstagio", fields: [id_user], references: [id])

  //relacionamento AvaliacaoAluno
  internshipEvaluation InternshipEvaluation[] @relation("processoEstagioAvaliacao")
  
  @@map("tb_internshipProcess")
}

model InternshipEvaluation{
  id                  String      @id @default(uuid())
  atividadesEstagio   String      @db.VarChar(63)
  componentesCurricularesUtilizados   String      @db.VarChar(127)
  aplicacaoDeConhecimentosCurso   String      @db.VarChar(127)
  startDateProcess  DateTime   @default(now()) @db.Timestamp(0)
  endDateProcess    DateTime   @db.Timestamp(0)
  id_user            String
  id_internshipProcess  String

  internshipProcess        InternshipProcess @relation("processoEstagioAvaliacao", fields: [id_internshipProcess], references: [id])
	@@map("tb_internshipEvaluation")
}
